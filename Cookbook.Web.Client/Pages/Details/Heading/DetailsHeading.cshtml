@inject IChangeTracker<RecipeUpdate> _changeTracker

<div class="row">
    <div class="col-md-1 align-middle">
        <span class="fa fa-star fa-5x"></span>
    </div>
    <div class="col-md-8">
        <DetailsTitle Title="@Recipe.Name" TitleChanged="@OnTitleChanged"></DetailsTitle>
        <hr/>
        <DetailsDescription Description="@Recipe.Description" DescriptionChanged="@OnDescriptionChanged"></DetailsDescription>
    </div>
    <div class="col-md-3">
        <div class="row text-center align-middle">
            <div class="col-md-4">
                <div><span class="fa fa-clock-o fa-3x"></span></div>
                <span><ShowDuration Time="@Recipe.Duration"></ShowDuration></span>
            </div>
            <div class="col-md-4">
                <div><span class="fa fa-money fa-3x"></span></div>
                <span>€ @Recipe.EstimatedPrice</span>
            </div>
            <div class="col-md-4">
                <div><span class="fa fa-signal fa-3x"></span></div>
                <span>@Recipe.Difficulty</span>
            </div>
        </div>
    </div>
</div>

@functions {

    [Parameter]
    private RecipeDto Recipe { get; set; }

    private void OnTitleChanged(string newTitle) {
        Recipe.Name = newTitle;
        _changeTracker.Set(recipe => recipe.Name, newTitle);
        StateHasChanged();
    }

    private void OnDescriptionChanged(string newDescription) {
        Recipe.Description = newDescription;
        _changeTracker.Set(recipe => recipe.Description, newDescription);
        StateHasChanged();
    }

}