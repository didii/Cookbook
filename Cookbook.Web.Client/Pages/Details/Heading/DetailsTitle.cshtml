@inject IDetailsService _detailsService

<EditableString ref="Editable" Value="@Title" ValueChanged="@OnValueChanged">
    <ViewTemplate>
        <h1 onclick="@OnClick">@context</h1>
    </ViewTemplate>
    <EditTemplate>
        <input ref="inputElement" bind="@context.CurrentValue" onkeyup="@OnKeyUp" class="input-h1"/>
    </EditTemplate>
</EditableString>

@functions {

    private ElementRef inputElement;

    private EditableString Editable { get; set; }

    [Parameter]
    private string Title { get; set; }

    [Parameter]
    private Action<string> TitleChanged { get; set; }

    private void OnValueChanged(string newValue) {
        Title = newValue;
        TitleChanged?.Invoke(newValue);
    }

    private async Task OnClick() {
        if (await Editable.Edit())
            await inputElement.Focus();
    }

    private async Task OnKeyUp(UIKeyboardEventArgs args) {
        if (args.Code == "Enter") {
            await Editable.Save();
        } else if (args.Code == "Escape") {
            await Editable.Cancel();
        }
    }

}
