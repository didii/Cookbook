<Toolbar ref="Toolbar" CanRemove="false" Saved="@Save" Cancelled="@Cancel"></Toolbar>
@if (!IsEdit) {
    <h1 onclick="@OnClick">@Title</h1>
}
<input ref="Input" bind="@_tempTitle" onkeyup="@OnKeyUp" hidden class="input-h1"/>


@functions {

    private ElementRef Input;
    private Toolbar Toolbar;

    //Parameters
    [Parameter]
    private string Title { get; set; }

    [Parameter]
    private Action<string> TitleChanged { get; set; }

    // Lifecycle methods
    private bool FirstCall { get; set; } = true;

    protected override void OnAfterRender() {
        if (FirstCall) {
            FirstCall = false;
            Toolbar.Hide();
        }
    }

    // Public methods
    public void Save() {
        TitleChanged?.Invoke(_tempTitle);
        IsEdit = false;
    }

    public void Cancel() {
        IsEdit = false;
    }

    //Actions
    private void OnClick() {
        _tempTitle = Title;
        IsEdit = true;
    }

    private void OnKeyUp(UIKeyboardEventArgs args) {
        if (args.Key == "Enter") {
            Save();
        }
        else if (args.Key == "Escape") {
            Cancel();
        }
    }

    private string _tempTitle { get; set; }

    private bool _isEdit = false;

    private bool IsEdit {
        get => _isEdit;
        set {
            if (_isEdit == value)
                return;
            _isEdit = value;
            if (value) {
                Input.Show();
                Input.Focus();
                Toolbar.Show();
            }
            else {
                Input.Hide();
                Toolbar.Hide();
            }
            StateHasChanged();
        }
    }

}