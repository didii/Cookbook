@inject IDetailsService _detailsService

<EditableDetailTable Items="Ingredients" IsEdit="@_detailsService.IsEditMode" NewItemFactory="@CreateNewIngredient" Changed="@OnChange">
    <HeaderTemplate>
        <th colspan="2">Hoeveelheid</th>
        <th>Ingredient</th>
    </HeaderTemplate>
    <RowViewTemplate Context="context">
        <td class="text-right">@context?.QuantityValue</td>
        <td>@context?.Quantity?.Name</td>
        <td>@context?.Food?.Name</td>
    </RowViewTemplate>
    <RowEditTemplate Context="context">
        <DetailsIngredientEditRow Ingredient="@context"/>
        <td>@context.Quantity.Name</td>
        <DetailsFoodEditRow Ingredient="@context"/>
    </RowEditTemplate>
</EditableDetailTable>

@functions {

    [Parameter]
    private IList<IngredientDto> Ingredients { get; set; }

    private IngredientEdit NewIngredient { get; set; }

    private IngredientDto CreateNewIngredient() {
        return new IngredientDto() {
            Food = new FoodDto(),
            Quantity = new QuantityDto() { QuantityType = new QuantityTypeDto() }
        };
    }

    private void OnChange(ItemChangedArgs<IngredientDto> args) {
        switch (args.Type) {
            case ItemChangedType.Added:
                Console.WriteLine("Added");
                break;
            case ItemChangedType.Changed:
                Console.WriteLine("Changed");
                break;
            case ItemChangedType.Deleted:
                Console.WriteLine("Deleted");
                break;
        }
    }

}